Let's compare the performance of bubble sort vs insertion sort!

Bubble Sort:
    - iterate through the array
        - if you find two adjacent numbers that are in the wrong order:
            - swap them around
    - repeat until the array is sorted

    - Best case: O(n)
    - Worst case: O(n^2)

Insertion sort:
    - split the array into a sorted and unsorted part
    - iterate through the array, and at each element:
        - insert it into the sorted side by shifting it 1 at a time

    - Best case: O(n)
    - Worst case: O(n^2)


1. Sorted input
Bubble sort:
    1 2 3 4 5

Insertion sort:
    1 2 3 4 5


2. Reverse-sorted
Bubble sort:
    5 4 3 2 1
    4 5 3 2 1
    4 3 5 2 1
    4 3 2 5 1
    4 3 2 1 5

    3 4 2 1 5
    3 2 4 1 5
    3 2 1 4 5

    2 3 1 4 5
    2 1 3 4 5

    1 2 3 4 5

Insertion sort:
    5|4 3 2 1

    4 5|3 2 1

    4 3 5|2 1
    3 4 5|2 1

    3 4 2 5|1
    3 2 4 5|1
    2 3 4 5|1

    2 3 4 1 5|
    2 3 1 4 5|
    2 1 3 4 5|
    1 2 3 4 5|

3. Sorted, except the first and last elements are swapped
Bubble sort: O(n^2)
    5 2 3 4 1

    2 5 3 4 1
    2 3 5 4 1
    2 3 4 5 1
    2 3 4 1 5

    2 3 1 4 5

    2 1 3 4 5

    1 2 3 4 5

Insertion sort: O(n)
    5|2 3 4 1

    2 5|3 4 1

    2 3 5|4 1

    2 3 4 5|1

    2 3 4 1 5|
    2 3 1 4 5|
    2 1 3 4 5|
    1 2 3 4 5|
